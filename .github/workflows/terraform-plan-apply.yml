name: 'Terraform plan and apply'

on:
  workflow_call:
    inputs:
      # test, acceptance or production
      environment:
        required: true
        type: string
      tf-workspace:
        required: true
        type: string
      config-directory:
        required: true
        type: string
    secrets:
      # Declare secrets used by this workflow
      ARM_CLIENT_ID:
        required: true
      ARM_CLIENT_SECRET:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
      ARM_TENANT_ID:
        required: true
      DOCKER_PASSWORD:
        required: true
      DOCKER_PASSWORD_QUOTED:
        required: true

jobs:
  terraform-plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions:
      contents: read
      pull-requests: write

    # Add static env variables for service principal
    env:
      TF_CLOUD_ORGANIZATION: "corbencreatives"
      TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID_QUOTED }}
      TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET_QUOTED }}
      TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID_QUOTED }}
      TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID_QUOTED }}
#      TF_VAR_docker_password: ${{secrets.DOCKER_PASSWORD}}
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID_QUOTED }}
      CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET_QUOTED }}
      TENANT_ID: ${{ secrets.ARM_TENANT_ID_QUOTED }}
      SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID_QUOTED }}
#      docker_password: ${{secrets.DOCKER_PASSWORD_QUOTED}}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

#      - name: Set Environment Variables from Secrets
#        env:
#          TF_VAR_ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
#          TF_VAR_ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
#          TF_VAR_ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
#          TF_VAR_ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
#          TF_VAR_docker_password: ${{secrets.DOCKER_PASSWORD}}
#        run: echo "Environment variables set for Terraform"

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: plan-upload
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ inputs.tf-workspace }}
          directory: ${{ inputs.config-directory }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: plan-run
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ inputs.tf-workspace }}
          configuration_version: ${{ steps.plan-upload.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.3.2
        id: plan-output
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          plan: ${{ steps.plan-run.outputs.plan_id }}

      - name: Create Plan Output
        uses: actions/github-script@v7.0.1
        id: show-output
        with:
          script: |
            return "#### HCP Terraform Plan Output ####\nPlan: ${{ steps.plan-output.outputs.add }} to add, ${{ steps.plan-output.outputs.change }} to change, ${{ steps.plan-output.outputs.destroy }} to destroy.\n[HCP Terraform Plan](${{ steps.plan-run.outputs.run_link }})"
          result-encoding: string

      - name: Show Plan Output
        run: echo "${{steps.show-output.outputs.result}}"


  terraform-apply:
    name: "Terraform Apply"
    needs: terraform-plan
    runs-on: ubuntu-latest
    permissions:
      contents: read
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: apply-upload
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ inputs.tf-workspace }}
          directory: ${{ inputs.config-directory }}

      - name: Create Apply Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: apply-run
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          workspace: ${{ inputs.tf-workspace }}
          configuration_version: ${{ steps.apply-upload.outputs.configuration_version_id }}

      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.0
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          token: ${{ secrets.TF_API_TOKEN }}
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"

